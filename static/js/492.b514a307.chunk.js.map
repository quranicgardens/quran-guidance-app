{"version":3,"file":"static/js/492.b514a307.chunk.js","mappings":"oKAqDA,IAjDoB,SAAHA,GAAe,IAAVC,EAAGD,EAAHC,IACpBC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACpBI,EAASP,EAKjB,OACEQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAG1CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,UACEC,QAZS,WACnBN,GAAY,EACd,EAWYG,UAAU,kBACVI,SAAUR,EAASK,SAAA,EAEnBF,EAAAA,EAAAA,KAACM,EAAAA,IAAY,CAACL,UAAU,SACvBJ,EAAW,eAAiB,cAIhCA,IACCM,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAOI,UAAQ,EAACN,UAAU,QAAOC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,UAAQQ,IAAKT,EAAQU,KAAK,cAAc,uDAG1CT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,KACAO,OAAO,SACLC,KAAMZ,EACNa,UAAQ,EACRX,UAAU,kBAAiBC,SAAA,EAE3BF,EAAAA,EAAAA,KAACa,EAAAA,IAAU,CAACZ,UAAU,SAAS,6BAUjD,C,oCC1CA,IAToB,WAElB,OACAE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UAAQc,GAAG,gBAAgBb,UAAU,uBAAsBC,SAAC,6DAC5DF,EAAAA,EAAAA,KAAA,UAAQc,GAAG,gBAAgBb,UAAU,oBAAmBC,SAAC,8DAE7D,C,0HC6uBMa,GAASC,EAAAA,EAAAA,MA2Hf,UAzHoB,WAClB,IAAAvB,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCwB,EAAUtB,EAAA,GAAEuB,EAAavB,EAAA,GAChCwB,GAA8BzB,EAAAA,EAAAA,UAAS,IAAG0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0C7B,EAAAA,EAAAA,UAAS,MAAK8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA8BjC,EAAAA,EAAAA,WAAS,GAAMkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAe,WACnBD,GAAW,GACX,IAAME,EAAsBf,EAAWgB,cACjCC,EAAkB,GAExBnB,EAAOoB,SAAQ,SAACC,GACdA,EAAMC,OAAOF,SAAQ,SAACG,GACpB,IAAMC,EAAeD,EAAME,KAAKC,GAAGR,cAAcS,SAASV,GACpDW,EAAcL,EAAME,KAAKI,GAAGX,cAAcS,SAASV,IAErDO,GAAgBI,IAClBT,EAAgBW,KAAK,CACnBC,YAAaV,EAAMW,OACnBC,YAAaZ,EAAMa,KAAKL,GACxBM,YAAad,EAAMa,KAAKR,GACxBU,YAAab,EAAMS,OACnBK,YAAad,EAAME,KAAKI,GACxBS,YAAaf,EAAME,KAAKC,IAG9B,GACF,IAEAnB,EAAWY,GACXJ,GAAW,GACXJ,EAAiB,KACnB,EAmBA,OACEvB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,wBAE3BF,EAAAA,EAAAA,KAACsD,EAAAA,EAAW,KACbtD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLR,UAAU,eACVsD,YAAY,uBACZC,MAAOvC,EACPwC,SAAU,SAACC,GAAC,OAAKxC,EAAcwC,EAAEhD,OAAO8C,MAAM,EAC9CG,UA9BW,SAACC,GACJ,UAAdA,EAAMC,KACR9B,GAEJ,KA4BU/B,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBG,QAAS2B,EAAa7B,SAAC,kBAQhE2B,GACC7B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiB6D,KAAK,SAAQ5D,UAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,oBAI9BC,EAAAA,EAAAA,MAAA4D,EAAAA,SAAA,CAAA7D,SAAA,EAEEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAC9BmB,EAAQ2C,OAAS,GAChB7D,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,UAAAE,SAASmB,EAAQ2C,SAAgB,UAAQ3C,EAAQ2C,OAAS,EAAI,IAAM,GAAG,aAE1EhE,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wBAKNmB,EAAQ2C,OAAS,IAChB7D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACvBmB,EAAQ4C,KAAI,SAACC,EAAQC,GAAK,OACzBhE,EAAAA,EAAAA,MAAA,MAEEF,UAAS,mBAAAmE,OAAqB3C,IAAkB0C,EAAQ,aAAe,IACvE/D,QAAS,kBA5DD,SAAC+D,GACzBzC,EAAiByC,EACnB,CA0DiCE,CAAkBF,EAAM,EACvCG,cAAe,kBAxDP,SAACxB,EAAaK,GACtC,IAAM3D,EAAG,cAAA4E,OAAiBtB,EAAW,KAAAsB,OAAIjB,GACzCoB,OAAOC,SAAS7D,KAAOnB,CACzB,CAqDuCiF,CAAkBP,EAAOpB,YAAaoB,EAAOf,YAAY,EAC9EuB,MAAO,CAAEC,OAAQ,WAAazE,SAAA,EAE9BC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CAASgE,EAAOhB,YAAY,KAAGgB,EAAOlB,YAAY,OAAU,WAASkB,EAAOf,YAAY,OAAGnD,EAAAA,EAAAA,KAAA,UAC3FG,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EAAMF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YAAgB,IAAEgE,EAAOd,gBAAmBpD,EAAAA,EAAAA,KAAA,UAC1DG,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EAAMF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,aAAiB,IAAEgE,EAAOb,gBACxCrD,EAAAA,EAAAA,KAAC4E,EAAAA,EAAW,CAACpF,KAAKqF,EAAAA,EAAAA,IAAgBX,EAAOpB,YAAaoB,EAAOf,gBACjFnD,EAAAA,EAAAA,KAAC8E,EAAAA,QAAc,CAACC,SAAUb,EAAOd,YAAa4B,UAAUC,EAAAA,EAAAA,IAAuBf,EAAOpB,YAAaoB,EAAOf,iBAVjFgB,EAWF,cASvB,C","sources":["Components/AudioPlayer.js","Components/FontResizer.js","Components/ar/QuranSearch.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaDownload, FaHeadphones } from \"react-icons/fa\";\r\n\r\nconst AudioPlayer = ({url}) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n    const mp3Url = url;\r\n  const handleListen = () => {\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 col-md-6 text-center\">\r\n          {/* <h2>Listen to the MP3</h2> */}\r\n\r\n          <div className=\"my-4\">\r\n            <button\r\n              onClick={handleListen}\r\n              className=\"btn btn-primary\"\r\n              disabled={isLoaded}\r\n            >\r\n              <FaHeadphones className=\"me-2\" />\r\n              {isLoaded ? \"Listening...\" : \"Listen\"}\r\n            </button>\r\n          </div>\r\n\r\n          {isLoaded && (\r\n            <div>\r\n              <audio controls className=\"w-100\">\r\n                <source src={mp3Url} type=\"audio/mp3\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n              <div className=\"mt-3\">\r\n                <a\r\n                target=\"_blank\"\r\n                  href={mp3Url}\r\n                  download\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  <FaDownload className=\"me-2\" />\r\n                  Download MP3\r\n                </a>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;\r\n","const FontResizer = () => {\r\n\r\n  return (\r\n  <div className=\"my-4 my-4 d-flex gap-3\">\r\n    <button id=\"increase-font\" className=\"btn btn-primary me-2\">تكبير الخط</button>\r\n    <button id=\"decrease-font\" className=\"btn btn-secondary\">تصغير الخط</button>\r\n  </div>);\r\n}\r\n// event is handled in index.html\r\nexport default FontResizer ;","// import React, { useState } from \"react\";\r\n\r\n// // Sample surah data\r\n// const surahs = [\r\n//   {\r\n//     number: 1,\r\n//     name: {\r\n//       ar: \"الفاتحة\",\r\n//       en: \"The Opening\",\r\n//       transliteration: \"Al-Fatihah\",\r\n//     },\r\n//     revelation_place: {\r\n//       ar: \"مكية\",\r\n//       en: \"meccan\",\r\n//     },\r\n//     verses_count: 7,\r\n//     verses: [\r\n//       {\r\n//         number: 1,\r\n//         text: {\r\n//           ar: \"بِسۡمِ ٱللَّهِ ٱلرَّحۡمَٰنِ ٱلرَّحِيمِ\",\r\n//           en: \"In the name of Allah, the Entirely Merciful, the Especially Merciful\",\r\n//         },\r\n//       },\r\n//       {\r\n//         number: 2,\r\n//         text: {\r\n//           ar: \"ٱلۡحَمۡدُ لِلَّهِ رَبِّ ٱلۡعَٰلَمِينَ\",\r\n//           en: \"[All] praise is [due] to Allah, Lord of the worlds\",\r\n//         },\r\n//       },\r\n//       // More verses...\r\n//     ],\r\n//   },\r\n//   // More surahs...\r\n// ];\r\n\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n\r\n//   const handleSearch = () => {\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         if (verse.text.en.toLowerCase().includes(lowerCaseSearchTerm)) {\r\n//           filteredResults.push({\r\n//             surahName: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseText: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Quran Verse Search</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Search for a word...\"\r\n//         value={searchTerm}\r\n//         onChange={(e) => setSearchTerm(e.target.value)}\r\n//       />\r\n//       <button onClick={handleSearch}>Search</button>\r\n\r\n//       {results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul>\r\n//             {results.map((result, index) => (\r\n//               <li key={index}>\r\n//                 <strong>{result.surahName}</strong> (Verse {result.verseNumber}):{\" \"}\r\n//                 {result.verseText}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// // Sample surah data\r\n// const surahs = [\r\n//   {\r\n//     number: 1,\r\n//     name: {\r\n//       ar: \"الفاتحة\",\r\n//       en: \"The Opening\",\r\n//       transliteration: \"Al-Fatihah\",\r\n//     },\r\n//     revelation_place: {\r\n//       ar: \"مكية\",\r\n//       en: \"meccan\",\r\n//     },\r\n//     verses_count: 7,\r\n//     verses: [\r\n//       {\r\n//         number: 1,\r\n//         text: {\r\n//           ar: \"بِسۡمِ ٱللَّهِ ٱلرَّحۡمَٰنِ ٱلرَّحِيمِ\",\r\n//           en: \"In the name of Allah, the Entirely Merciful, the Especially Merciful\",\r\n//         },\r\n//       },\r\n//       {\r\n//         number: 2,\r\n//         text: {\r\n//           ar: \"ٱلۡحَمۡدُ لِلَّهِ رَبِّ ٱلۡعَٰلَمِينَ\",\r\n//           en: \"[All] praise is [due] to Allah, Lord of the worlds\",\r\n//         },\r\n//       },\r\n//       // More verses...\r\n//     ],\r\n//   },\r\n//   // More surahs...\r\n// ];\r\n\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [searchBy, setSearchBy] = useState(\"en\"); // \"en\" for English, \"ar\" for Arabic\r\n//   const [results, setResults] = useState([]);\r\n\r\n//   const handleSearch = () => {\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const verseText =\r\n//           searchBy === \"en\" ? verse.text.en : verse.text.ar; // Check based on search language\r\n//         if (verseText.toLowerCase().includes(lowerCaseSearchTerm)) {\r\n//           filteredResults.push({\r\n//             surahName: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseText: verseText,\r\n//             language: searchBy === \"en\" ? \"English\" : \"Arabic\", // Display language\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n//               Search\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"form-check\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"searchBy\"\r\n//               id=\"searchByEn\"\r\n//               value=\"en\"\r\n//               checked={searchBy === \"en\"}\r\n//               onChange={() => setSearchBy(\"en\")}\r\n//             />\r\n//             <label className=\"form-check-label\" htmlFor=\"searchByEn\">\r\n//               Search by English Translation\r\n//             </label>\r\n//           </div>\r\n//           <div className=\"form-check\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"searchBy\"\r\n//               id=\"searchByAr\"\r\n//               value=\"ar\"\r\n//               checked={searchBy === \"ar\"}\r\n//               onChange={() => setSearchBy(\"ar\")}\r\n//             />\r\n//             <label className=\"form-check-label\" htmlFor=\"searchByAr\">\r\n//               Search by Arabic Verse\r\n//             </label>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul className=\"list-group\">\r\n//             {results.map((result, index) => (\r\n//               <li key={index} className=\"list-group-item\">\r\n//                 <strong>{result.surahName}</strong> (Verse {result.verseNumber}){\" \"}\r\n//                 <em>({result.language})</em>: <br />\r\n//                 <span>{result.verseText}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// // Sample surah data\r\n// const surahs = [\r\n//   {\r\n//     number: 1,\r\n//     name: {\r\n//       ar: \"الفاتحة\",\r\n//       en: \"The Opening\",\r\n//       transliteration: \"Al-Fatihah\",\r\n//     },\r\n//     revelation_place: {\r\n//       ar: \"مكية\",\r\n//       en: \"meccan\",\r\n//     },\r\n//     verses_count: 7,\r\n//     verses: [\r\n//       {\r\n//         number: 1,\r\n//         text: {\r\n//           ar: \"بِسۡمِ ٱللَّهِ ٱلرَّحۡمَٰنِ ٱلرَّحِيمِ\",\r\n//           en: \"In the name of Allah, the Entirely Merciful, the Especially Merciful\",\r\n//         },\r\n//       },\r\n//       {\r\n//         number: 2,\r\n//         text: {\r\n//           ar: \"ٱلۡحَمۡدُ لِلَّهِ رَبِّ ٱلۡعَٰلَمِينَ\",\r\n//           en: \"[All] praise is [due] to Allah, Lord of the worlds\",\r\n//         },\r\n//       },\r\n//       // More verses...\r\n//     ],\r\n//   },\r\n//   // More surahs...\r\n// ];\r\n\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n\r\n//   const handleSearch = () => {\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n//         const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n//         if (englishMatch || arabicMatch) {\r\n//           filteredResults.push({\r\n//             surahNameAr: surah.name.ar,\r\n//             surahNameEn: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseTextAr: verse.text.ar,\r\n//             verseTextEn: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n//               Search\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul className=\"list-group\">\r\n//             {results.map((result, index) => (\r\n//               <li key={index} className=\"list-group-item\">\r\n//                 <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n//                 <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n//                 <span><strong>English:</strong> {result.verseTextEn}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { getAllSurahsWithAyat } from \"../../Helper/Utils\";\r\n\r\n// const surahs = getAllSurahsWithAyat()\r\n\r\n// const QuranSearch = () => {\r\n    \r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const [selectedIndex, setSelectedIndex] = useState(null); // Track selected result index\r\n\r\n//   const handleSearch = (e) => {\r\n//     const lowerCaseSearchTerm = e.target.value.toLowerCase();\r\n//     setSearchTerm(e.target.value); // Update search term\r\n\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n//         const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n//         if (englishMatch || arabicMatch) {\r\n//           filteredResults.push({\r\n//             surahNameAr: surah.name.ar,\r\n//             surahNameEn: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseTextAr: verse.text.ar,\r\n//             verseTextEn: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults); // Update results\r\n//     setSelectedIndex(null); // Reset selected index after search\r\n//   };\r\n\r\n//   const handleResultClick = (index) => {\r\n//     setSelectedIndex(index); // Update the selected index\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={handleSearch} // Perform search on input change\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul className=\"list-group\">\r\n//             {results.map((result, index) => (\r\n//               <li\r\n//                 key={index}\r\n//                 className={`list-group-item ${\r\n//                   selectedIndex === index ? \"bg-warning\" : \"\"\r\n//                 }`} // Highlight the selected result\r\n//                 onClick={() => handleResultClick(index)} // Handle click to select result\r\n//                 style={{ cursor: \"pointer\" }} // Make the result clickable\r\n//               >\r\n//                 <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n//                 <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n//                 <span><strong>English:</strong> {result.verseTextEn}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import { getAllSurahsWithAyat } from \"../../Helper/Utils\";\r\n\r\n// const surahs = getAllSurahsWithAyat()\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const [selectedIndex, setSelectedIndex] = useState(null); // Track selected result index\r\n\r\n//   const handleSearch = () => {\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n//         const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n//         if (englishMatch || arabicMatch) {\r\n//           filteredResults.push({\r\n//             surahNameAr: surah.name.ar,\r\n//             surahNameEn: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseTextAr: verse.text.ar,\r\n//             verseTextEn: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//     setSelectedIndex(null); // Reset selected index after search\r\n//   };\r\n\r\n//   const handleResultClick = (index) => {\r\n//     setSelectedIndex(index); // Update the selected index\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n//               Search\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul className=\"list-group\">\r\n//             {results.map((result, index) => (\r\n//               <li\r\n//                 key={index}\r\n//                 className={`list-group-item ${\r\n//                   selectedIndex === index ? \"bg-warning\" : \"\"\r\n//                 }`} // Highlight the selected result\r\n//                 onClick={() => handleResultClick(index)} // Handle click to select result\r\n//                 style={{ cursor: \"pointer\" }} // Make the result clickable\r\n//               >\r\n//                 <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n//                 <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n//                 <span><strong>English:</strong> {result.verseTextEn}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { getAllSurahsWithAyat } from \"../../Helper/Utils\";\r\n\r\n// const surahs = getAllSurahsWithAyat();\r\n\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const [selectedIndex, setSelectedIndex] = useState(null); // Track selected result index\r\n//   const [loading, setLoading] = useState(false); // Track loading state\r\n\r\n//   const handleSearch = () => {\r\n//     setLoading(true); // Set loading to true when search begins\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n//         const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n//         if (englishMatch || arabicMatch) {\r\n//           filteredResults.push({\r\n//             surahNameAr: surah.name.ar,\r\n//             surahNameEn: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseTextAr: verse.text.ar,\r\n//             verseTextEn: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//     setLoading(false); // Set loading to false once search is complete\r\n//     setSelectedIndex(null); // Reset selected index after search\r\n//   };\r\n\r\n//   // Handle search when Enter key is pressed\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === \"Enter\") {\r\n//       handleSearch();\r\n//     }\r\n//   };\r\n\r\n//   const handleResultClick = (index) => {\r\n//     setSelectedIndex(index); // Update the selected index\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//               onKeyDown={handleKeyPress} // Add event listener for Enter key press\r\n//             />\r\n//             <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n//               Search\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Show loading state while searching */}\r\n//       {loading ? (\r\n//         <div className=\"text-center\">\r\n//           <div className=\"spinner-border\" role=\"status\">\r\n//             <span className=\"sr-only\">Loading...</span>\r\n//           </div>\r\n//         </div>\r\n//       ) : results.length > 0 ? (\r\n//         <div>\r\n//           <h2>Search Results:</h2>\r\n//           <ul className=\"list-group\">\r\n//             {results.map((result, index) => (\r\n//               <li\r\n//                 key={index}\r\n//                 className={`list-group-item ${selectedIndex === index ? \"bg-warning\" : \"\"}`}\r\n//                 onClick={() => handleResultClick(index)} // Handle click to select result\r\n//                 style={{ cursor: \"pointer\" }} // Make the result clickable\r\n//               >\r\n//                 <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n//                 <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n//                 <span><strong>English:</strong> {result.verseTextEn}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No results found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { getAllSurahsWithAyat } from \"../../Helper/Utils\";\r\n\r\n// const surahs = getAllSurahsWithAyat();\r\n\r\n// const QuranSearch = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const [selectedIndex, setSelectedIndex] = useState(null); // Track selected result index\r\n//   const [loading, setLoading] = useState(false); // Track loading state\r\n\r\n//   const handleSearch = () => {\r\n//     setLoading(true); // Set loading to true when search begins\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n//     const filteredResults = [];\r\n\r\n//     surahs.forEach((surah) => {\r\n//       surah.verses.forEach((verse) => {\r\n//         const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n//         const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n//         if (englishMatch || arabicMatch) {\r\n//           filteredResults.push({\r\n//             surahNameAr: surah.name.ar,\r\n//             surahNameEn: surah.name.en,\r\n//             verseNumber: verse.number,\r\n//             verseTextAr: verse.text.ar,\r\n//             verseTextEn: verse.text.en,\r\n//           });\r\n//         }\r\n//       });\r\n//     });\r\n\r\n//     setResults(filteredResults);\r\n//     setLoading(false); // Set loading to false once search is complete\r\n//     setSelectedIndex(null); // Reset selected index after search\r\n//   };\r\n\r\n//   // Handle search when Enter key is pressed\r\n//   const handleKeyPress = (event) => {\r\n//     if (event.key === \"Enter\") {\r\n//       handleSearch();\r\n//     }\r\n//   };\r\n\r\n//   const handleResultClick = (index) => {\r\n//     setSelectedIndex(index); // Update the selected index\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1 className=\"text-center\">Quran Verse Search</h1>\r\n//       <div className=\"row mb-3\">\r\n//         <div className=\"col-md-8 mx-auto\">\r\n//           <div className=\"input-group\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control\"\r\n//               placeholder=\"Search for a word...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//               onKeyDown={handleKeyPress} // Add event listener for Enter key press\r\n//             />\r\n//             <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n//               Search\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Show loading state while searching */}\r\n//       {loading ? (\r\n//         <div className=\"text-center\">\r\n//           <div className=\"spinner-border\" role=\"status\">\r\n//             <span className=\"sr-only\">Loading...</span>\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <>\r\n//           {/* Show result count */}\r\n//           <div className=\"text-center mt-3\">\r\n//             {results.length > 0 ? (\r\n//               <p><strong>{results.length}</strong> result{results.length > 1 ? 's' : ''} found</p>\r\n//             ) : (\r\n//               <p>No results found.</p>\r\n//             )}\r\n//           </div>\r\n\r\n//           {/* Display search results */}\r\n//           {results.length > 0 && (\r\n//             <div>\r\n//               <h2>Search Results:</h2>\r\n//               <ul className=\"list-group\">\r\n//                 {results.map((result, index) => (\r\n//                   <li\r\n//                     key={index}\r\n//                     className={`list-group-item ${selectedIndex === index ? \"bg-warning\" : \"\"}`}\r\n//                     onClick={() => handleResultClick(index)} // Handle click to select result\r\n//                     style={{ cursor: \"pointer\" }} // Make the result clickable\r\n//                   >\r\n//                     <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n//                     <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n//                     <span><strong>English:</strong> {result.verseTextEn}</span>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QuranSearch;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { getAllSurahsWithAyat, getAyahAudioUrl } from \"../../Helper/Utils\";\r\nimport AudioPlayer from \"../AudioPlayer\";\r\nimport AyahRecitation from \"../AyahRecitation\";\r\nimport  normalizeArabic  from \"../../Helper/arabic-normalizer\";\r\nimport FontResizer from \"../FontResizer\";\r\nimport { getAyahAudioUrlSource3 ,getAyahAudioUrlSource1} from \"../../Helper/Utils\";\r\nconst surahs = getAllSurahsWithAyat();\r\n\r\nconst QuranSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null); // Track selected result index\r\n  const [loading, setLoading] = useState(false); // Track loading state\r\n\r\n  const handleSearch = () => {\r\n    setLoading(true); // Set loading to true when search begins\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    const filteredResults = [];\r\n\r\n    surahs.forEach((surah) => {\r\n      surah.verses.forEach((verse) => {\r\n        const englishMatch = verse.text.en.toLowerCase().includes(lowerCaseSearchTerm);\r\n        const arabicMatch = verse.text.ar.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n        if (englishMatch || arabicMatch) {\r\n          filteredResults.push({\r\n            surahNumber: surah.number, // Store surah number for the link\r\n            surahNameAr: surah.name.ar,\r\n            surahNameEn: surah.name.en,\r\n            verseNumber: verse.number,\r\n            verseTextAr: verse.text.ar,\r\n            verseTextEn: verse.text.en,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    setResults(filteredResults);\r\n    setLoading(false); // Set loading to false once search is complete\r\n    setSelectedIndex(null); // Reset selected index after search\r\n  };\r\n\r\n  // Handle search when Enter key is pressed\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleResultClick = (index) => {\r\n    setSelectedIndex(index); // Update the selected index\r\n  };\r\n\r\n  // Navigate to the specific verse page on double-click\r\n  const handleDoubleClick = (surahNumber, verseNumber) => {\r\n    const url = `/en/surahs/${surahNumber}/${verseNumber}`;\r\n    window.location.href = url; // Navigate to the URL\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"text-center\">Quran Verse Search</h1>\r\n       {/* Font Size Controls */}\r\n       <FontResizer/>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-8 mx-auto\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search for a word...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              onKeyDown={handleKeyPress} // Add event listener for Enter key press\r\n            />\r\n            <button className=\"btn btn-primary\" onClick={handleSearch}>\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Show loading state while searching */}\r\n      {loading ? (\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Show result count */}\r\n          <div className=\"text-center mt-3\">\r\n            {results.length > 0 ? (\r\n              <p><strong>{results.length}</strong> result{results.length > 1 ? 's' : ''} found</p>\r\n            ) : (\r\n              <p>No results found.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Display search results */}\r\n          {results.length > 0 && (\r\n            <div>\r\n              <h2>Search Results:</h2>\r\n              <ul className=\"list-group\">\r\n                {results.map((result, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className={`list-group-item ${selectedIndex === index ? \"bg-warning\" : \"\"}`}\r\n                    onClick={() => handleResultClick(index)} // Handle click to select result\r\n                    onDoubleClick={() => handleDoubleClick(result.surahNumber, result.verseNumber)} // Handle double-click to navigate\r\n                    style={{ cursor: \"pointer\" }} // Make the result clickable\r\n                  >\r\n                    <strong>{result.surahNameEn} ({result.surahNameAr})</strong> (Verse {result.verseNumber}): <br />\r\n                    <span><strong>Arabic:</strong> {result.verseTextAr}</span><br />\r\n                    <span><strong>English:</strong> {result.verseTextEn}</span>\r\n                    <AudioPlayer url={getAyahAudioUrl(result.surahNumber, result.verseNumber)}/>\r\n<AyahRecitation ayahText={result.verseTextAr} audioUrl={getAyahAudioUrlSource1(result.surahNumber, result.verseNumber)}/>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuranSearch;\r\n"],"names":["_ref","url","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","mp3Url","_jsx","className","children","_jsxs","onClick","disabled","FaHeadphones","controls","src","type","target","href","download","FaDownload","id","surahs","getAllSurahsWithAyat","searchTerm","setSearchTerm","_useState3","_useState4","results","setResults","_useState5","_useState6","selectedIndex","setSelectedIndex","_useState7","_useState8","loading","setLoading","handleSearch","lowerCaseSearchTerm","toLowerCase","filteredResults","forEach","surah","verses","verse","englishMatch","text","en","includes","arabicMatch","ar","push","surahNumber","number","surahNameAr","name","surahNameEn","verseNumber","verseTextAr","verseTextEn","FontResizer","placeholder","value","onChange","e","onKeyDown","event","key","role","_Fragment","length","map","result","index","concat","handleResultClick","onDoubleClick","window","location","handleDoubleClick","style","cursor","AudioPlayer","getAyahAudioUrl","AyahRecitation","ayahText","audioUrl","getAyahAudioUrlSource1"],"sourceRoot":""}