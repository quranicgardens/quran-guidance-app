{"version":3,"file":"static/js/741.d61e14ab.chunk.js","mappings":"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","sources":["Components/en/SurahViewer.js","Helper/arabic-normalizer.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import surahs from '../../Data/ar/surah-ayahs';\r\n// import SurahsDetails from '../../Data/SurahsDetails';\r\n// import { getTypeInArabic, removeTashkeel } from '../../Helper/Utils';\r\n// // const surahs = [\r\n// //   { number: 1, name: 'ٱلْفَاتِحَة', type: 'Meccan', totalVerses: 7, ayat: ['بِسْمِ اللَّهِ الرَّحْمَـٰنِ الرَّحِيمِ', 'الْحَمْدُ لِلَّهِ رَبِّ الْعَالَمِينَ', 'الرَّحْمَـٰنِ الرَّحِيمِ', 'مَالِكِ يَوْمِ الدِّينِ', 'إِيَّاكَ نَعْبُدُ وَإِيَّاكَ نَسْتَعِينُ', 'اهْدِنَا الصِّرَاطَ الْمُسْتَقِيمَ', 'صِرَاطَ الَّذِينَ أَنْعَمْتَ عَلَيْهِمْ غَيْرِ الْمَغْضُوبِ عَلَيْهِمْ وَلَا الضَّالِّينَ'] },\r\n// //   { number: 2, name: 'ٱلْبَقَرَة', type: 'Medinan', totalVerses: 286, ayat: ['الم', 'ذَٰلِكَ الْكِتَابُ لَا رَيْبَ ۛ فِيهِ هُدًى لِّلْمُتَّقِينَ', 'الَّذِينَ يُؤْمِنُونَ بِالْغَيْبِ وَيُقِيمُونَ الصَّلَاةَ وَمِمَّا رَزَقْنَاهُمْ يُنفِقُونَ', /* add more ayat here */] },\r\n// //   { number: 3, name: 'آلِ عِمْرَان', type: 'Medinan', totalVerses: 200, ayat: ['الم', 'اللَّهُ لَا إِلَٰهَ إِلَّا هُوَ الْحَيُّ الْقَيُّومُ', /* add more ayat here */] },\r\n// //   // Add more surahs here\r\n// // ];\r\n\r\n// const SurahViewer = () => {\r\n//   const { surahNumber } = useParams();\r\n//   const [selectedSurah, setSelectedSurah] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const surah = surahs[surahNumber];\r\n//     //.find(s => s.number.toString() === surahNumber);\r\n//     setSelectedSurah(surah || null);\r\n//   }, [surahNumber]);\r\n\r\n//   return (\r\n//     <>\r\n//     <style>{`\r\n// body {\r\n//   direction: rtl;\r\n//   text-align: right;\r\n// }\r\n// `}</style>\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"mb-4\">عرض آيات السورة</h1>\r\n//       {selectedSurah ? (\r\n//         <div className=\"list-group\">\r\n//           <div className=\"list-group-item\">\r\n\r\n//             <h5 className=\"mb-1\">سورة {selectedSurah.number}: {selectedSurah.name}</h5>\r\n//             {/* <p className=\"mb-1\">نوع السورة: {getTypeInArabic(SurahsDetails[selectedSurah.number-1].type)}</p>\r\n//             <p className=\"mb-1\">عدد الآيات: {SurahsDetails[selectedSurah.number-1].total_verses}</p> */}\r\n//             <p className=\"mb-1\">الآيات:</p>\r\n//             <div className=\"mt-3\">\r\n//               {selectedSurah.ayahs.map((ayah, index) => (\r\n//                 <p key={index}>{ayah.text}</p>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <p>السورة غير موجودة.</p>\r\n//       )}\r\n//     </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SurahViewer;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const surahs = [\r\n//   { number: 1, name: 'ٱلْفَاتِحَة', type: 'Meccan', totalVerses: 7, ayat: ['بِسْمِ اللَّهِ الرَّحْمَـٰنِ الرَّحِيمِ', 'الْحَمْدُ لِلَّهِ رَبِّ الْعَالَمِينَ', 'الرَّحْمَـٰنِ الرَّحِيمِ', 'مَالِكِ يَوْمِ الدِّينِ', 'إِيَّاكَ نَعْبُدُ وَإِيَّاكَ نَسْتَعِينُ', 'اهْدِنَا الصِّرَاطَ الْمُسْتَقِيمَ', 'صِرَاطَ الَّذِينَ أَنْعَمْتَ عَلَيْهِمْ غَيْرِ الْمَغْضُوبِ عَلَيْهِمْ وَلَا الضَّالِّينَ'] },\r\n//   { number: 2, name: 'ٱلْبَقَرَة', type: 'Medinan', totalVerses: 286, ayat: ['الم', 'ذَٰلِكَ الْكِتَابُ لَا رَيْبَ ۛ فِيهِ هُدًى لِّلْمُتَّقِينَ', 'الَّذِينَ يُؤْمِنُونَ بِالْغَيْبِ وَيُقِيمُونَ الصَّلَاةَ وَمِمَّا رَزَقْنَاهُمْ يُنفِقُونَ', /* add more ayat here */] },\r\n//   { number: 3, name: 'آلِ عِمْرَان', type: 'Medinan', totalVerses: 200, ayat: ['الم', 'اللَّهُ لَا إِلَٰهَ إِلَّا هُوَ الْحَيُّ الْقَيُّومُ', /* add more ayat here */] },\r\n//   // Add more surahs here\r\n// ];\r\n\r\n// const removeTashkeel = (text) => {\r\n//   return text.replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '');\r\n// };\r\n\r\n// const SurahViewer = () => {\r\n//   const { surahNumber } = useParams();\r\n//   const [selectedSurah, setSelectedSurah] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [filteredAyat, setFilteredAyat] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const surah = surahs.find(s => s.number.toString() === surahNumber);\r\n//     setSelectedSurah(surah || null);\r\n//     setFilteredAyat(surah ? surah.ayat : []);\r\n//   }, [surahNumber]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedSurah) {\r\n//       const filtered = selectedSurah.ayat.filter(ayah =>\r\n//         removeTashkeel(ayah).includes(removeTashkeel(searchTerm))\r\n//       );\r\n//       setFilteredAyat(filtered);\r\n//     }\r\n//   }, [searchTerm, selectedSurah]);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"mb-4\">عرض آيات السورة</h1>\r\n//       {selectedSurah ? (\r\n//         <div>\r\n//           <div className=\"list-group\">\r\n//             <div className=\"list-group-item\">\r\n//               <h5 className=\"mb-1\">سورة {selectedSurah.number}: {selectedSurah.name}</h5>\r\n//               <p className=\"mb-1\">نوع السورة: {selectedSurah.type === 'Meccan' ? 'مكية' : 'مدنية'}</p>\r\n//               <p className=\"mb-1\">عدد الآيات: {selectedSurah.totalVerses}</p>\r\n//             </div>\r\n//           </div>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control my-4\"\r\n//             placeholder=\"ابحث في الآيات...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//           />\r\n//           <div className=\"list-group\">\r\n//             {filteredAyat.map((ayah, index) => (\r\n//               <div key={index} className=\"list-group-item\">\r\n//                 {ayah}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <p>السورة غير موجودة.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SurahViewer;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import  normalizeArabic  from '../../Helper/arabic-normalizer';\r\n// import surahs from '../../Data/ar/surah-ayahs';\r\n// import { getSurahDetails, getTypeInArabic } from '../../Helper/Utils';\r\n\r\n// const normalizeText = (text) => {\r\n//   return normalizeArabic(text)\r\n//     .normalize(\"NFD\") // Normalize to NFD (Canonical Decomposition)\r\n//     .replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '') // Remove Tashkeel (diacritics)\r\n//     .replace(/[\\u0640-\\u064A]/g, (char) => {\r\n//       // Replace Arabic letters to unify different forms of the same letter\r\n//       const map = {\r\n//         '\\u0640': '', '\\u0641': 'ف', '\\u0642': 'ق', '\\u0643': 'ك', '\\u0644': 'ل', '\\u0645': 'م', '\\u0646': 'ن', '\\u0647': 'ه', '\\u0648': 'و', '\\u0649': 'ى', '\\u064A': 'ي'\r\n//       };\r\n//       return map[char] || char;\r\n//     });\r\n// };\r\n\r\n\r\n// const SurahViewer = () => {\r\n//   const { surahNumber } = useParams();\r\n//   const [selectedSurah, setSelectedSurah] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [filteredAyat, setFilteredAyat] = useState([]);\r\n//   const [selectedAyahIndex, setSelectedAyahIndex] = useState(null); // Track selected Ayah\r\n//   const handleAyahClick = (index) => {\r\n//     setSelectedAyahIndex(index); // Set the clicked Ayah as selected\r\n//   };\r\n//   useEffect(() => {\r\n//     const surah = surahs[surahNumber];\r\n//     //.find(s => s.number.toString() === surahNumber);\r\n//     if (surah.name) document.title = surah.name;\r\n//     setSelectedSurah(surah || null);\r\n//     setFilteredAyat(surah ? surah.ayahs : []);\r\n//   }, [surahNumber]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedSurah) {\r\n//       const filtered = selectedSurah.ayahs.filter(ayah =>\r\n//         normalizeText(ayah).includes(normalizeText(searchTerm))\r\n//       );\r\n//       setFilteredAyat(filtered);\r\n//     }\r\n//   }, [searchTerm, selectedSurah]);\r\n\r\n//   return (\r\n//         <>\r\n//     <style>{`\r\n//     .ayah-number {\r\n//     font-weight: 600;\r\n// }\r\n// .ayah-wrapper{\r\n// display: inline;\r\n// }\r\n// .ayah-text {\r\n//   font-size: 1.2rem;\r\n//   font-family: 'Uthmani', Arial, sans-serif; /* You can use Uthmani font for Mushaf style */\r\n//   direction: rtl;\r\n// }\r\n// .ayah-number{\r\n// padding-left: 5px;\r\n// padding-right: 5px;\r\n// }\r\n// .highlighted {\r\n//   background-color: #ffeb3b; /* Yellow background for highlight */\r\n//   border-radius: 5px;\r\n//   transition: background-color 0.3s ease-in-out; /* Smooth transition for the highlight */\r\n// }\r\n// body {\r\n//   direction: rtl;\r\n//   text-align: right;\r\n// }\r\n// `}</style>\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"mb-4\">عرض آيات السورة</h1>\r\n//       {selectedSurah ? (\r\n    \r\n//         <div>\r\n//           <div className=\"list-group\">\r\n//             <div className=\"list-group-item\">\r\n//               <h5 className=\"mb-1\">سورة {surahNumber}: {getSurahDetails(surahNumber).name}</h5>\r\n//               <p className=\"mb-1\">نوع السورة: { getTypeInArabic(getSurahDetails(surahNumber).type)}</p>\r\n//               <p className=\"mb-1\">عدد الآيات: {getSurahDetails(surahNumber).total_verses}</p>\r\n//             </div>\r\n//           </div>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control my-4\"\r\n//             placeholder=\"ابحث في الآيات...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//           />\r\n//           <div className=\"ayat-container\">\r\n//             {filteredAyat.map((ayah, index) => (\r\n//               <div key={index}  onClick={() => handleAyahClick(index)}  className={`ayah-wrapper ${\r\n//                 selectedAyahIndex === index ? 'highlighted' : ''\r\n//               }`}>\r\n//                {/* Ayah Text and Number Inline */}\r\n//             <span className=\"ayah-text\">{ayah.text}</span>\r\n//             <span className=\"ayah-number\">({index + 1})</span>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <p>السورة غير موجودة.</p>\r\n//       )}\r\n//     </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SurahViewer;\r\n\r\n\r\n//using global data\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import  normalizeArabic  from '../../Helper/arabic-normalizer';\r\n// //import surahs from '../../Data/ar/surah-ayahs';\r\n// import { getSurahWithAyat, getSurahDetails, getTypeInArabic } from '../../Helper/Utils';\r\n\r\n// const normalizeText = (text) => {\r\n//   return normalizeArabic(text)\r\n//     .normalize(\"NFD\") // Normalize to NFD (Canonical Decomposition)\r\n//     .replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '') // Remove Tashkeel (diacritics)\r\n//     .replace(/[\\u0640-\\u064A]/g, (char) => {\r\n//       // Replace Arabic letters to unify different forms of the same letter\r\n//       const map = {\r\n//         '\\u0640': '', '\\u0641': 'ف', '\\u0642': 'ق', '\\u0643': 'ك', '\\u0644': 'ل', '\\u0645': 'م', '\\u0646': 'ن', '\\u0647': 'ه', '\\u0648': 'و', '\\u0649': 'ى', '\\u064A': 'ي'\r\n//       };\r\n//       return map[char] || char;\r\n//     });\r\n// };\r\n\r\n\r\n// const SurahViewerEn = () => {\r\n//   const { surahNumber,ayahNumber } = useParams();\r\n//   const [selectedSurah, setSelectedSurah] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [filteredAyat, setFilteredAyat] = useState([]);\r\n//   const [selectedAyahIndex, setSelectedAyahIndex] = useState(null); // Track selected Ayah\r\n//   const handleAyahClick = (index) => {\r\n//     setSelectedAyahIndex(index); // Set the clicked Ayah as selected\r\n//   };\r\n//   useEffect(() => {\r\n//     const surah = getSurahWithAyat(surahNumber);\r\n//     //surahs[surahNumber];\r\n//     //.find(s => s.number.toString() === surahNumber);\r\n//     if (surah.name) document.title = surah.name.ar+ \" - \" + surah.name.en;\r\n//     setSelectedSurah(surah || null);\r\n//     setFilteredAyat(surah ? surah.verses : []);\r\n//   }, [surahNumber]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedSurah) {\r\n\r\n//       const filtered = selectedSurah.verses.filter(ayah =>\r\n        \r\n//          ayah.text.en.toLowerCase().includes(searchTerm.toLowerCase())\r\n//         || (ayah.number.toString()==(searchTerm.trim()))\r\n//         ||normalizeText(ayah.text.ar).includes(normalizeText(searchTerm))\r\n//       );\r\n//       setFilteredAyat(filtered);\r\n//     }\r\n//   }, [searchTerm, selectedSurah]);\r\n\r\n//   return (\r\n//         <>\r\n//     <style>{`\r\n//     .ayah-number {\r\n//     font-weight: 600;\r\n// }\r\n// .ayah-wrapper{\r\n// display: inline;\r\n// }\r\n// .ayah-text {\r\n//   font-size: 1.2rem;\r\n//   font-family: 'Uthmani', Arial, sans-serif; /* You can use Uthmani font for Mushaf style */\r\n//   direction: rtl;\r\n// }\r\n// .ayah-number{\r\n// padding-left: 5px;\r\n// padding-right: 5px;\r\n// }\r\n// .highlighted {\r\n//   background-color: #ffeb3b; /* Yellow background for highlight */\r\n//   border-radius: 5px;\r\n//   transition: background-color 0.3s ease-in-out; /* Smooth transition for the highlight */\r\n// }\r\n// body {\r\n//   direction: rtl;\r\n//   text-align: right;\r\n// }\r\n// `}</style>\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"mb-4\">عرض آيات السورة\r\n//         -\r\n//         Surah Verses Viewer\r\n//       </h1>\r\n//       {selectedSurah ? (\r\n    \r\n//         <div>\r\n          \r\n//           {/* Font Size Controls */}\r\n//           <div className=\"my-4 my-4 d-flex gap-3\">\r\n//             <button id=\"increase-font\" className=\"btn btn-primary me-2\"\r\n//             >\r\n//               Increase font size\r\n//             </button>\r\n//             <button id=\"decrease-font\" className=\"btn btn-secondary\"\r\n//             >\r\n//               Decrease font size\r\n//             </button>\r\n//           </div>\r\n\r\n//           <div className=\"list-group\">\r\n//             <div className=\"list-group-item\">\r\n//               <h5 className=\"mb-1\">سورة {surahNumber}: {getSurahDetails(surahNumber).name}</h5>\r\n//               <p className=\"mb-1\">نوع السورة: { getTypeInArabic(getSurahDetails(surahNumber).type)}</p>\r\n//               <p className=\"mb-1\">عدد الآيات: {getSurahDetails(surahNumber).total_verses}</p>\r\n//             </div>\r\n//           </div>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control my-4\"\r\n//             placeholder=\"ابحث في الآيات...\r\n//             search in verses...\r\n//             \"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//           />\r\n//           <div className=\"ayat-container\">\r\n//             {filteredAyat.map((ayah, index) => (\r\n//               <div key={index}  onClick={() => handleAyahClick(index)}  className={`ayah-wrapper ${\r\n//                 selectedAyahIndex === index ? 'highlighted' : ''\r\n//               }`}>\r\n//                {/* Ayah Text and Number Inline */}\r\n               \r\n//                \" \r\n//             <span className=\"ayah-text\">{ayah.text.ar}</span>\r\n          \r\n//            \"\r\n//            &nbsp;\r\n//            <br/>\r\n//             <span className=\"ayah-text\">{ayah.text.en}</span>\r\n//           <br/>\r\n//             <span className=\"ayah-number\">({ayah.number})</span>\r\n      \r\n//             <hr/>\r\n//             {/* <span className=\"ayah-number\">({ayah.number})</span> */}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       ) : (\r\n//         <p>السورة غير موجودة.\r\n//           surah not found\r\n//         </p>\r\n//       )}\r\n//     </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SurahViewerEn;\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import normalizeArabic from '../../Helper/arabic-normalizer';\r\n// import { getSurahWithAyat, getSurahDetails, getTypeInArabic } from '../../Helper/Utils';\r\n\r\n// const normalizeText = (text) => {\r\n//   return normalizeArabic(text)\r\n//     .normalize(\"NFD\") // Normalize to NFD (Canonical Decomposition)\r\n//     .replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '') // Remove Tashkeel (diacritics)\r\n//     .replace(/[\\u0640-\\u064A]/g, (char) => {\r\n//       // Replace Arabic letters to unify different forms of the same letter\r\n//       const map = {\r\n//         '\\u0640': '', '\\u0641': 'ف', '\\u0642': 'ق', '\\u0643': 'ك', '\\u0644': 'ل', '\\u0645': 'م', '\\u0646': 'ن', '\\u0647': 'ه', '\\u0648': 'و', '\\u0649': 'ى', '\\u064A': 'ي'\r\n//       };\r\n//       return map[char] || char;\r\n//     });\r\n// };\r\n\r\n// const SurahViewerEn = () => {\r\n//   const { surahNumber, ayahNumber } = useParams();\r\n//   const [selectedSurah, setSelectedSurah] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [filteredAyat, setFilteredAyat] = useState([]);\r\n//   const [selectedAyahIndex, setSelectedAyahIndex] = useState(null); // Track selected Ayah\r\n//   const ayahRefs = useRef([]); // Refs to store references to each Ayah for scrolling\r\n\r\n//   // Handle Ayah click\r\n//   const handleAyahClick = (index) => {\r\n//     setSelectedAyahIndex(index); // Set the clicked Ayah as selected\r\n//     if (ayahRefs.current[index]) {\r\n//       ayahRefs.current[index].scrollIntoView({\r\n//         behavior: 'smooth',\r\n//         block: 'center', // Scroll to the center of the Ayah\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const surah = getSurahWithAyat(surahNumber);\r\n//     if (surah && surah.name) {\r\n//       document.title = `${surah.name.ar} - ${surah.name.en}`;\r\n//     }\r\n//     setSelectedSurah(surah || null);\r\n//     setFilteredAyat(surah ? surah.verses : []);\r\n//   }, [surahNumber]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedSurah) {\r\n//       const filtered = selectedSurah.verses.filter((ayah) =>\r\n//         ayah.text.en.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         ayah.number.toString() === searchTerm.trim() ||\r\n//         normalizeText(ayah.text.ar).includes(normalizeText(searchTerm))\r\n//       );\r\n//       setFilteredAyat(filtered);\r\n//     }\r\n//   }, [searchTerm, selectedSurah]);\r\n\r\n//   return (\r\n//     <>\r\n//       <style>{`\r\n//         .ayah-number {\r\n//           font-weight: 600;\r\n//         }\r\n//         .ayah-wrapper {\r\n//           display: inline;\r\n//         }\r\n//         .ayah-text {\r\n//           font-size: 1.2rem;\r\n//           font-family: 'Uthmani', Arial, sans-serif;\r\n//           direction: rtl;\r\n//         }\r\n//         .ayah-number {\r\n//           padding-left: 5px;\r\n//           padding-right: 5px;\r\n//         }\r\n//         .highlighted {\r\n//           background-color: #ffeb3b; /* Yellow background for highlight */\r\n//           border-radius: 5px;\r\n//           transition: background-color 0.3s ease-in-out;\r\n//         }\r\n//         body {\r\n//           direction: rtl;\r\n//           text-align: right;\r\n//         }\r\n//       `}</style>\r\n//       <div className=\"container mt-5\">\r\n//         <h1 className=\"mb-4\">عرض آيات السورة - Surah Verses Viewer</h1>\r\n//         {selectedSurah ? (\r\n//           <div>\r\n//             <div className=\"my-4 d-flex gap-3\">\r\n//               <button id=\"increase-font\" className=\"btn btn-primary me-2\">\r\n//                 Increase font size\r\n//               </button>\r\n//               <button id=\"decrease-font\" className=\"btn btn-secondary\">\r\n//                 Decrease font size\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"list-group\">\r\n//               <div className=\"list-group-item\">\r\n//                 <h5 className=\"mb-1\">سورة {surahNumber}: {getSurahDetails(surahNumber).name}</h5>\r\n//                 <p className=\"mb-1\">نوع السورة: {getTypeInArabic(getSurahDetails(surahNumber).type)}</p>\r\n//                 <p className=\"mb-1\">عدد الآيات: {getSurahDetails(surahNumber).total_verses}</p>\r\n//               </div>\r\n//             </div>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control my-4\"\r\n//               placeholder=\"ابحث في الآيات... search in verses...\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//             <div className=\"ayat-container\">\r\n//               {filteredAyat.map((ayah, index) => (\r\n//                 <div\r\n//                   key={index}\r\n//                   ref={(el) => ayahRefs.current[index] = el} // Set ref for each Ayah\r\n//                   onClick={() => handleAyahClick(index)}\r\n//                   className={`ayah-wrapper ${selectedAyahIndex === index ? 'highlighted' : ''}`}\r\n//                 >\r\n//                   <span className=\"ayah-text\">{ayah.text.ar}</span>\r\n//                   &nbsp;\r\n//                   <br />\r\n//                   <span className=\"ayah-text\">{ayah.text.en}</span>\r\n//                   <br />\r\n//                   <span className=\"ayah-number\">({ayah.number})</span>\r\n//                   <hr />\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         ) : (\r\n//           <p>السورة غير موجودة. Surah not found</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SurahViewerEn;\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport normalizeArabic from '../../Helper/arabic-normalizer';\r\nimport { getSurahWithAyat, getSurahDetails, getTypeInArabic } from '../../Helper/Utils';\r\n\r\nconst normalizeText = (text) => {\r\n  return normalizeArabic(text)\r\n    .normalize(\"NFD\") // Normalize to NFD (Canonical Decomposition)\r\n    .replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '') // Remove Tashkeel (diacritics)\r\n    .replace(/[\\u0640-\\u064A]/g, (char) => {\r\n      // Replace Arabic letters to unify different forms of the same letter\r\n      const map = {\r\n        '\\u0640': '', '\\u0641': 'ف', '\\u0642': 'ق', '\\u0643': 'ك', '\\u0644': 'ل', '\\u0645': 'م', '\\u0646': 'ن', '\\u0647': 'ه', '\\u0648': 'و', '\\u0649': 'ى', '\\u064A': 'ي'\r\n      };\r\n      return map[char] || char;\r\n    });\r\n};\r\n\r\nconst SurahViewerEn = () => {\r\n  const { surahNumber, ayahNumber } = useParams(); // Extract both surahNumber and ayahNumber from the URL\r\n  const [selectedSurah, setSelectedSurah] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredAyat, setFilteredAyat] = useState([]);\r\n  const [selectedAyahIndex, setSelectedAyahIndex] = useState(null); // Track selected Ayah\r\n  const ayahRefs = useRef([]); // Refs to store references to each Ayah for scrolling\r\n\r\n  // Handle Ayah click\r\n  const handleAyahClick = (index) => {\r\n    setSelectedAyahIndex(index); // Set the clicked Ayah as selected\r\n    if (ayahRefs.current[index]) {\r\n      ayahRefs.current[index].scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'center',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const surah = getSurahWithAyat(surahNumber);\r\n    if (surah && surah.name) {\r\n      document.title = `${surah.name.ar} - ${surah.name.en}`;\r\n    }\r\n    setSelectedSurah(surah || null);\r\n    setFilteredAyat(surah ? surah.verses : []);\r\n  }, [surahNumber]);\r\n\r\n  // useEffect(() => {\r\n  //   if (selectedSurah) {\r\n  //     const filtered = selectedSurah.verses.filter((ayah) =>\r\n        \r\n  //       ayah.text.en.toLowerCase().includes(searchTerm.trim().toLowerCase()) ||\r\n  //       ayah.number.toString() === searchTerm.trim() ||\r\n  //       normalizeText(ayah.text.ar).includes(normalizeText(searchTerm))\r\n  //     );\r\n  //     setFilteredAyat(filtered);\r\n  //   }\r\n  // }, [searchTerm, selectedSurah]);\r\n  useEffect(() => {\r\n    if (selectedSurah) {\r\n      const filtered = selectedSurah.verses.filter((ayah) => {\r\n        const lowerCaseSearchTerm = searchTerm.trim().toLowerCase(); // Normalize the search term\r\n        const lowerCaseEnglishText = ayah.text.en.toLowerCase(); // Convert the English text to lowercase\r\n  \r\n        // Check if searchTerm is a number\r\n        const isNumberSearch = !isNaN(searchTerm.trim()) && searchTerm.trim() !== \"\";\r\n  \r\n        // Check if searchTerm contains English characters (non-Arabic characters)\r\n        const isEnglishSearch = /[a-zA-Z]/.test(searchTerm);\r\n  \r\n        // Debugging output\r\n        console.log(`Searching for: \"${lowerCaseSearchTerm}\"`);\r\n        console.log(`Ayah English text: \"${lowerCaseEnglishText}\"`);\r\n        console.log(`Is English Search: ${isEnglishSearch}`);\r\n        console.log(`Is Number Search: ${isNumberSearch}`);\r\n  \r\n        // Matches based on the search term's nature (English, Number, or Arabic)\r\n        const matchesEnglish = isEnglishSearch && lowerCaseEnglishText.includes(lowerCaseSearchTerm);\r\n        const matchesNumber = isNumberSearch && ayah.number.toString() === searchTerm.trim();\r\n        const matchesArabic = !isNumberSearch && !isEnglishSearch && normalizeText(ayah.text.ar).includes(normalizeText(lowerCaseSearchTerm));\r\n  \r\n        // Log the individual match results for debugging\r\n        console.log(`Matches English: ${matchesEnglish}`);\r\n        console.log(`Matches Number: ${matchesNumber}`);\r\n        console.log(`Matches Arabic: ${matchesArabic}`);\r\n  \r\n        return matchesEnglish || matchesNumber || matchesArabic;\r\n      });\r\n  \r\n      // Debugging output to show the filtered results\r\n      console.log('Filtered Ayat:', filtered);\r\n      setFilteredAyat(filtered); // Set filtered verses\r\n    }\r\n  }, [searchTerm, selectedSurah]);\r\n  \r\n\r\n  useEffect(() => {\r\n    // Highlight the Ayah based on ayahNumber from URL\r\n    if (ayahNumber && selectedSurah) {\r\n      const index = selectedSurah.verses.findIndex(ayah => ayah.number.toString() === ayahNumber);\r\n      if (index !== -1) {\r\n        setSelectedAyahIndex(index); // Highlight the Ayah\r\n        if (ayahRefs.current[index]) {\r\n          ayahRefs.current[index].scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [ayahNumber, selectedSurah]);\r\n\r\n  return (\r\n    <>\r\n      <style>{`\r\n        .ayah-number {\r\n          font-weight: 600;\r\n        }\r\n        .ayah-wrapper {\r\n          display: inline;\r\n        }\r\n        .ayah-text {\r\n          font-size: 1.2rem;\r\n          font-family: 'Uthmani', Arial, sans-serif;\r\n          direction: rtl;\r\n        }\r\n        .ayah-number {\r\n          padding-left: 5px;\r\n          padding-right: 5px;\r\n        }\r\n        .highlighted {\r\n          background-color: #ffeb3b; /* Yellow background for highlight */\r\n          border-radius: 5px;\r\n          transition: background-color 0.3s ease-in-out;\r\n        }\r\n        body {\r\n          direction: rtl;\r\n          text-align: right;\r\n        }\r\n      `}</style>\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"mb-4\">عرض آيات السورة - Surah Verses Viewer</h1>\r\n        {selectedSurah ? (\r\n          <div>\r\n            <div className=\"my-4 d-flex gap-3\">\r\n              <button id=\"increase-font\" className=\"btn btn-primary me-2\">\r\n                Increase font size\r\n              </button>\r\n              <button id=\"decrease-font\" className=\"btn btn-secondary\">\r\n                Decrease font size\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"list-group\">\r\n              <div className=\"list-group-item\">\r\n                <h5 className=\"mb-1\">سورة {surahNumber}: {getSurahDetails(surahNumber).name}</h5>\r\n                <p className=\"mb-1\">نوع السورة: {getTypeInArabic(getSurahDetails(surahNumber).type)}</p>\r\n                <p className=\"mb-1\">عدد الآيات: {getSurahDetails(surahNumber).total_verses}</p>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-4\"\r\n              placeholder=\"ابحث في الآيات... search in verses...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <div className=\"ayat-container\">\r\n              {filteredAyat.map((ayah, index) => (\r\n                <div\r\n                  key={index}\r\n                  ref={(el) => ayahRefs.current[index] = el} // Set ref for each Ayah\r\n                  onClick={() => handleAyahClick(index)}\r\n                  className={`ayah-wrapper ${selectedAyahIndex === index ? 'highlighted' : ''}`}\r\n                >\r\n                  <span className=\"ayah-text\">{ayah.text.ar}</span>\r\n                  &nbsp;\r\n                  <br />\r\n                  <span className=\"ayah-text\">{ayah.text.en}</span>\r\n                  <br />\r\n                  <span className=\"ayah-number\">({ayah.number})</span>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>السورة غير موجودة. Surah not found</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SurahViewerEn;\r\n","const normalizer = {\r\n    'ا': 'ا',\r\n    'أ': 'ا',\r\n    'إ': 'ا',\r\n    'آ': 'ا',\r\n    'ٱ': 'ا',\r\n    'ب': 'ب',\r\n    'ت': 'ت',\r\n    'ث': 'ث',\r\n    'ج': 'ج',\r\n    'ح': 'ح',\r\n    'خ': 'خ',\r\n    'د': 'د',\r\n    'ذ': 'ذ',\r\n    'ر': 'ر',\r\n    'ز': 'ز',\r\n    'س': 'س',\r\n    'ش': 'ش',\r\n    'ص': 'ص',\r\n    'ض': 'ض',\r\n    'ط': 'ط',\r\n    'ظ': 'ظ',\r\n    'ع': 'ع',\r\n    'غ': 'غ',\r\n    'ف': 'ف',\r\n    'ق': 'ق',\r\n    'ك': 'ك',\r\n    'ل': 'ل',\r\n    'م': 'م',\r\n    'ن': 'ن',\r\n    'ه': 'ه',\r\n    'ة': 'ة',\r\n    'و': 'و',\r\n    'ؤ': 'ؤ',\r\n    'ي': 'ي',\r\n    'ى': 'ي',\r\n    'ئ': 'ئ',\r\n    'ءِ': 'ء',\r\n    'ً': '',\r\n    'ٌ': '',\r\n    'ٍ': '',\r\n    'َ': '',\r\n    'ُ': '',\r\n    'ِ': '',\r\n    'ّ': '',\r\n    'ْ': '',\r\n    'ٓ': '',\r\n    'ٔ': '',\r\n    'ٕ': '',\r\n    ' ': ' '\r\n}\r\n\r\nfunction normalizeArabic(text) {\r\n    const normalizedText = Array.from(text).map(letter => normalizer[letter]).join(\"\")\r\n\r\n    return normalizedText\r\n}\r\n\r\nexport default normalizeArabic"],"names":["normalizeText","text","normalizeArabic","normalize","replace","char","_useParams","useParams","surahNumber","ayahNumber","_useState","useState","_useState2","_slicedToArray","selectedSurah","setSelectedSurah","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","filteredAyat","setFilteredAyat","_useState7","_useState8","selectedAyahIndex","setSelectedAyahIndex","ayahRefs","useRef","useEffect","surah","getSurahWithAyat","name","document","title","concat","ar","en","verses","filtered","filter","ayah","lowerCaseSearchTerm","trim","toLowerCase","lowerCaseEnglishText","isNumberSearch","isNaN","isEnglishSearch","test","console","log","matchesEnglish","includes","matchesNumber","number","toString","matchesArabic","index","findIndex","current","scrollIntoView","behavior","block","_jsxs","_Fragment","children","_jsx","className","id","getSurahDetails","getTypeInArabic","type","total_verses","placeholder","value","onChange","e","target","map","ref","el","onClick","handleAyahClick","normalizer","Array","from","letter","join"],"sourceRoot":""}