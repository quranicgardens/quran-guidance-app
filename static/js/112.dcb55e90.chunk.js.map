{"version":3,"file":"static/js/112.dcb55e90.chunk.js","mappings":"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","sources":["Components/ar/EntireQuranSearch.js","Helper/arabic-normalizer.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport  normalizeArabic  from '../../Helper/arabic-normalizer';\r\n//import surahs from '../../Data/ar/surah-ayahs';\r\nimport { getAllSurahWithAyat, getSurahDetails, getSurahWithAyat, getTypeInArabic } from '../../Helper/Utils';\r\n\r\nconst normalizeText = (text) => {\r\n  return normalizeArabic(text)\r\n    .normalize(\"NFD\") // Normalize to NFD (Canonical Decomposition)\r\n    .replace(/[\\u0617-\\u061A\\u064B-\\u0652]/g, '') // Remove Tashkeel (diacritics)\r\n    .replace(/[\\u0640-\\u064A]/g, (char) => {\r\n      // Replace Arabic letters to unify different forms of the same letter\r\n      const map = {\r\n        '\\u0640': '', '\\u0641': 'ف', '\\u0642': 'ق', '\\u0643': 'ك', '\\u0644': 'ل', '\\u0645': 'م', '\\u0646': 'ن', '\\u0647': 'ه', '\\u0648': 'و', '\\u0649': 'ى', '\\u064A': 'ي'\r\n      };\r\n      return map[char] || char;\r\n    });\r\n};\r\n\r\n\r\nconst EntireQuranSearch = () => {\r\n  const { surahNumber } = useParams();\r\n  const [selectedSurah, setSelectedSurah] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredAyat, setFilteredAyat] = useState([]);\r\n  const [selectedAyahIndex, setSelectedAyahIndex] = useState(null); // Track selected Ayah\r\n  const handleAyahClick = (index) => {\r\n    setSelectedAyahIndex(index); // Set the clicked Ayah as selected\r\n  };\r\n  useEffect(() => {\r\n    const surah =getSurahWithAyat(surahNumber);\r\n    //surahs[surahNumber];\r\n    //.find(s => s.number.toString() === surahNumber);\r\n    if (surah.name) document.title = surah.name.ar ;\r\n    setSelectedSurah(surah || null);\r\n    setFilteredAyat(surah ? surah.verses : []);\r\n  }, [surahNumber]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSurah) {\r\n      const filtered = selectedSurah.verses.filter(ayah =>\r\n        normalizeText(ayah.text.ar).includes(normalizeText(searchTerm))\r\n        || ayah.number.toString()==(searchTerm)\r\n      );\r\n      setFilteredAyat(filtered);\r\n    }\r\n  }, [searchTerm, selectedSurah]);\r\n\r\n  return (\r\n        <>\r\n    <style>{`\r\n    .ayah-number {\r\n    font-weight: 600;\r\n}\r\n.ayah-wrapper{\r\ndisplay: inline;\r\n}\r\n.ayah-text {\r\n  font-size: 1.2rem;\r\n  font-family: 'Uthmani', Arial, sans-serif; /* You can use Uthmani font for Mushaf style */\r\n  direction: rtl;\r\n}\r\n.ayah-number{\r\npadding-left: 5px;\r\npadding-right: 5px;\r\n}\r\n.highlighted {\r\n  background-color: #ffeb3b; /* Yellow background for highlight */\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s ease-in-out; /* Smooth transition for the highlight */\r\n}\r\nbody {\r\n  direction: rtl;\r\n  text-align: right;\r\n}\r\n`}</style>\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4\">عرض آيات السورة</h1>\r\n      {selectedSurah ? (\r\n    \r\n        <div>\r\n          \r\n          {/* Font Size Controls */}\r\n          <div className=\"my-4 my-4 d-flex gap-3\">\r\n            <button id=\"increase-font\" className=\"btn btn-primary me-2\">تكبير الخط</button>\r\n            <button id=\"decrease-font\" className=\"btn btn-secondary\">تصغير الخط</button>\r\n          </div>\r\n\r\n          <div className=\"list-group\">\r\n            <div className=\"list-group-item\">\r\n              <h5 className=\"mb-1\">سورة {surahNumber}: {getSurahDetails(surahNumber).name}</h5>\r\n              <p className=\"mb-1\">نوع السورة: { getTypeInArabic(getSurahDetails(surahNumber).type)}</p>\r\n              <p className=\"mb-1\">عدد الآيات: {getSurahDetails(surahNumber).total_verses}</p>\r\n            </div>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control my-4\"\r\n            placeholder=\"ابحث في الآيات...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"ayat-container\">\r\n            {filteredAyat.map((ayah, index) => (\r\n              <div key={index}  onClick={() => handleAyahClick(index)}  className={`ayah-wrapper ${\r\n                selectedAyahIndex === index ? 'highlighted' : ''\r\n              }`}>\r\n               {/* Ayah Text and Number Inline */}\r\n            <span className=\"ayah-text\">{ayah.text.ar}</span>\r\n            <span className=\"ayah-number\">({ayah.number})</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>السورة غير موجودة.</p>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EntireQuranSearch;","const normalizer = {\r\n    'ا': 'ا',\r\n    'أ': 'ا',\r\n    'إ': 'ا',\r\n    'آ': 'ا',\r\n    'ٱ': 'ا',\r\n    'ب': 'ب',\r\n    'ت': 'ت',\r\n    'ث': 'ث',\r\n    'ج': 'ج',\r\n    'ح': 'ح',\r\n    'خ': 'خ',\r\n    'د': 'د',\r\n    'ذ': 'ذ',\r\n    'ر': 'ر',\r\n    'ز': 'ز',\r\n    'س': 'س',\r\n    'ش': 'ش',\r\n    'ص': 'ص',\r\n    'ض': 'ض',\r\n    'ط': 'ط',\r\n    'ظ': 'ظ',\r\n    'ع': 'ع',\r\n    'غ': 'غ',\r\n    'ف': 'ف',\r\n    'ق': 'ق',\r\n    'ك': 'ك',\r\n    'ل': 'ل',\r\n    'م': 'م',\r\n    'ن': 'ن',\r\n    'ه': 'ه',\r\n    'ة': 'ة',\r\n    'و': 'و',\r\n    'ؤ': 'ؤ',\r\n    'ي': 'ي',\r\n    'ى': 'ي',\r\n    'ئ': 'ئ',\r\n    'ءِ': 'ء',\r\n    'ً': '',\r\n    'ٌ': '',\r\n    'ٍ': '',\r\n    'َ': '',\r\n    'ُ': '',\r\n    'ِ': '',\r\n    'ّ': '',\r\n    'ْ': '',\r\n    'ٓ': '',\r\n    'ٔ': '',\r\n    'ٕ': '',\r\n    ' ': ' '\r\n}\r\n\r\nfunction normalizeArabic(text) {\r\n    const normalizedText = Array.from(text).map(letter => normalizer[letter]).join(\"\")\r\n\r\n    return normalizedText\r\n}\r\n\r\nexport default normalizeArabic"],"names":["normalizeText","text","normalizeArabic","normalize","replace","char","surahNumber","useParams","_useState","useState","_useState2","_slicedToArray","selectedSurah","setSelectedSurah","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","filteredAyat","setFilteredAyat","_useState7","_useState8","selectedAyahIndex","setSelectedAyahIndex","useEffect","surah","getSurahWithAyat","name","document","title","ar","verses","filtered","filter","ayah","includes","number","toString","_jsxs","_Fragment","children","_jsx","className","id","getSurahDetails","getTypeInArabic","type","total_verses","placeholder","value","onChange","e","target","map","index","onClick","handleAyahClick","concat","normalizer","Array","from","letter","join"],"sourceRoot":""}